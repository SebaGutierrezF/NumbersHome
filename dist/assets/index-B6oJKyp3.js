import{initializeApp as h}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-app.js";import{getFirestore as I,addDoc as b,collection as y,query as _,where as v,orderBy as w,limit as S,getDocs as A}from"https://www.gstatic.com/firebasejs/10.7.1/firebase-firestore.js";(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const t of document.querySelectorAll('link[rel="modulepreload"]'))i(t);new MutationObserver(t=>{for(const n of t)if(n.type==="childList")for(const c of n.addedNodes)c.tagName==="LINK"&&c.rel==="modulepreload"&&i(c)}).observe(document,{childList:!0,subtree:!0});function o(t){const n={};return t.integrity&&(n.integrity=t.integrity),t.referrerPolicy&&(n.referrerPolicy=t.referrerPolicy),t.crossOrigin==="use-credentials"?n.credentials="include":t.crossOrigin==="anonymous"?n.credentials="omit":n.credentials="same-origin",n}function i(t){if(t.ep)return;t.ep=!0;const n=o(t);fetch(t.href,n)}})();var a={};require("dotenv").config();function F(){if(!a)throw console.error("Environment variables not found. Please make sure you have configured the GitHub secrets."),new Error("Missing environment configuration");return{apiKey:a.VITE_FIREBASE_API_KEY,authDomain:a.VITE_FIREBASE_AUTH_DOMAIN,projectId:a.VITE_FIREBASE_PROJECT_ID,storageBucket:a.VITE_FIREBASE_STORAGE_BUCKET,messagingSenderId:a.VITE_FIREBASE_MESSAGING_SENDER_ID,appId:a.VITE_FIREBASE_APP_ID,measurementId:a.VITE_MEASUREMENT_ID}}const m=F();let f,s;try{if(!m.projectId)throw new Error("Firebase Project ID is missing");f=h(m),s=I(f),console.log("Firebase initialized successfully")}catch(r){throw console.error("Error initializing Firebase:",r),r}async function N(r){try{if(!s)throw new Error("Firebase not initialized");console.log("Saving data to Firebase:",{...r,timestamp:new Date});const e=await b(y(s,"numbers"),{...r,timestamp:new Date});return console.log("Data saved successfully with ID:",e.id),e.id}catch(e){throw console.error("Error saving to Firebase:",e),e}}async function P(r){try{if(!s)throw new Error("Firebase not initialized");console.log("Querying Firebase for phone number:",r);const e=y(s,"numbers"),o=_(e,v("phoneNumber","==",r),w("timestamp","desc"),S(1)),i=await A(o);return console.log("Query result:",i.empty?"No data found":"Data found"),i.empty?null:i.docs[0].data()}catch(e){throw console.error("Error querying Firebase:",e),e}}const D={es:{title:"Consulta el origen del número telefónico",inputPlaceholder:"Ingresa el número telefónico con código de país (ej: +34612345678)",searchButton:"Consultar",loading:"Consultando...",invalidFormat:"Formato de número inválido. Use el formato +[código país][número]",numberInfo:"Información del número",country:"País",countryCode:"Código de país",location:"Ubicación",localFormat:"Formato local",carrier:"Operador",notAvailable:"No disponible",error:"Error al consultar el número. Por favor, intenta más tarde.",processingError:"Error al procesar la solicitud. Por favor, intenta más tarde.",invalidNumber:"Número no válido"},en:{title:"Check phone number origin",inputPlaceholder:"Enter phone number with country code (e.g: +34612345678)",searchButton:"Search",loading:"Searching...",invalidFormat:"Invalid number format. Use format: +[country code][number]",numberInfo:"Number Information",country:"Country",countryCode:"Country Code",location:"Location",localFormat:"Local Format",carrier:"Carrier",notAvailable:"Not available",error:"Error querying the number. Please try again later.",processingError:"Error processing request. Please try again later.",invalidNumber:"Invalid number"}},R="https://api.apilayer.com/number_verification/validate",T=window.env.VITE_PHONE_API_KEY,L=async r=>{try{const e=await fetch(`${R}?number=${r}`,{method:"GET",headers:{apikey:T}});if(!e.ok)throw console.error("API Error:",e.status,await e.text()),new Error(`API_ERROR_${e.status}`);const o=await e.json();if(!o.valid)throw new Error("INVALID_PHONE");return{valid:!0,country:o.country_name,region:o.location||"No disponible",carrier:o.carrier||"No disponible",location:{lat:null,lng:null}}}catch(e){throw console.error("Phone validation error:",e),e}},O=(r,e)=>{const o=new Date().toISOString();return{telefono:e.trim(),country_name:(r.country_name||"").trim(),country_code:(r.country_code||"").trim(),location:(r.location||"No disponible").trim(),local_format:(r.local_format||"").trim(),carrier:(r.carrier||"No disponible").trim(),timestamp:o,created_at:o,valid:!0}},C=r=>{const e=/^\+[0-9]{1,3}[0-9]{4,14}$/;return{valido:e.test(r),mensaje:e.test(r)?"":"El formato del número no es válido. Use: +[código país][número]"}},p=r=>{const e=JSON.parse(localStorage.getItem("historial")||"[]");e.includes(r)||(e.unshift(r),e.length>5&&e.pop(),localStorage.setItem("historial",JSON.stringify(e)))},g=()=>{const r=JSON.parse(localStorage.getItem("historial")||"[]");return r.length>0?`
            <div class="historial">
                <h3><i class="fas fa-history"></i> Búsquedas recientes</h3>
                <ul>
                    ${r.map(e=>`
                        <li>
                            <span>${e}</span>
                            <button onclick="consultarNumero('${e}')">
                                <i class="fas fa-search"></i>
                            </button>
                        </li>
                    `).join("")}
                </ul>
            </div>
        `:""};let B=localStorage.getItem("lang")||"es";function H(r,e,o){switch(console.error("Error:",r),e.style.display="block",document.querySelector(".map-container").style.display="none",r.message){case"INVALID_FORMAT":e.innerHTML=o.invalidFormat;break;case"INVALID_PHONE":e.innerHTML=o.invalidPhone;break;case"FIREBASE_QUERY_ERROR":e.innerHTML=o.firebaseQueryError;break;case"FIREBASE_SAVE_ERROR":e.innerHTML=o.firebaseSaveError;break;default:e.innerHTML=o.generalError}}function E(r,e,o){if(e.innerHTML=`
        <p><strong>${o.country}:</strong> ${r.country}</p>
        <p><strong>${o.region}:</strong> ${r.region}</p>
        <p><strong>${o.carrier}:</strong> ${r.carrier}</p>
    `,r.location&&r.location.lat&&r.location.lng){const i=document.querySelector(".map-container");i.style.display="block"}}document.getElementById("telefonoForm").addEventListener("submit",async function(r){r.preventDefault();const e=document.getElementById("telefono").value.trim(),o=document.getElementById("resultado"),i=document.querySelector(".map-container"),t=D[B];try{const{valido:n,mensaje:c}=C(e);if(!n)throw new Error("INVALID_FORMAT");o.style.display="block",o.innerHTML=t.loading,i.style.display="none";const l=await P(e);if(l)E(l,o,t),p(e),document.querySelector(".historial-container").innerHTML=g();else{const u=await L(e);if(u.valid){const d=O(u,e);await N(d),E(d,o,t),p(e),document.querySelector(".historial-container").innerHTML=g()}else throw new Error("INVALID_PHONE")}}catch(n){H(n,o,t)}});
